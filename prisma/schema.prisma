generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int            @id @default(autoincrement())
  name         String
  email        String         @unique
  picture      String?
  games        UsersOnGames[]
  startedGames Game[]
  moves        Move[]

  @@map("users")
}

model Game {
  id          Int            @id @default(autoincrement())
  letters     String
  startedAt   DateTime       @default(now())
  startedBy   User           @relation(fields: [startedById], references: [id])
  startedById Int // relation scalar field
  board       String?
  latestWord  String?
  users       UsersOnGames[]
  currentTurn Int            @default(1)
  turns       Turn[]         @relation("turns")

  @@map("games")
}

model UsersOnGames {
  user         User     @relation(fields: [userId], references: [id])
  userId       Int // relation scalar field (used in the `@relation` attribute above)
  userAccepted Boolean  @default(false)
  game         Game     @relation(fields: [gameId], references: [id])
  gameId       Int // relation scalar field (used in the `@relation` attribute above)
  createdAt    DateTime @default(now())

  @@id([userId, gameId])
}

model Turn {
  id         Int      @unique @default(autoincrement())
  game       Game     @relation("turns", fields: [gameId], references: [id])
  gameId     Int // relation scalar field (used in the `@relation` attribute above)
  turnNumber Int
  moves      Move[]   @relation("moves")
  turnStart  DateTime @default(now())

  @@id([gameId, turnNumber])
}

model Move {
  id           Int      @id @default(autoincrement())
  turn         Turn     @relation("moves", fields: [turnId], references: [id])
  turnId       Int
  user         User     @relation(fields: [userId], references: [id])
  userId       Int // relation scalar field (used in the `@relation` attribute above)
  playedWord   String
  playedBoard  String
  playedTime   DateTime @default(now())
  playedPoints Int
  won          Boolean  @default(false)
}
